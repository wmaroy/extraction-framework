#!/bin/bash

# Shortcut for mvn scala:run -Dlauncher=... -DaddArgs=...
# Must be called with one of the modules (core/, dump/, ...) as current directory.
# Example:
# extraction_framework/core> ../run LAUNCHER ARG1 ARG2 ARG3
# is equivalent to
# extraction_framework/core> mvn scala:run "-Dlauncher=LAUNCHER" "-DaddArgs=ARG1|ARG2|ARG3"

LAUNCHER="$1"

ADD_ARGS="$2"
for ARG in ${@:3}
do
  ADD_ARGS="$ADD_ARGS|$ARG"
done

#mvn $MAVEN_DEBUG $BATCH scala:run "-Dlauncher=SlackForwarder"  "-DaddArgs=https://hooks.slack.com/services/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|/home/mf/extraction-framework/scripts/slackRegexMap.json|/home/mf/extraction-framework/stderr.out|/home/mf/extraction-framework/stdout.out" &
#PID=$!
#echo "$PID"

# export MAVEN_OPTS='-Xmx4096M -XX:MaxPermSize=1024M -XX:+HeapDumpOnOutOfMemoryError -XX:+PrintGC -XX:+PrintGCTimeStamps'
# export MAVEN_DEBUG='-X -e'

# if we're not on a terminal, use batch mode to avoid ugly log files
[ ! -t 1 ] && BATCH="-B"

mvn $MAVEN_DEBUG $BATCH scala:run "-Dlauncher=$LAUNCHER" "-DaddArgs=$ADD_ARGS" #&> "/proc/$PID/fd/0"