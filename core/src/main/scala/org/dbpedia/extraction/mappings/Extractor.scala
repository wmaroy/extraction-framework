package org.dbpedia.extraction.mappings

import org.dbpedia.extraction.destinations.{Quad,Dataset}

/**
 * TODO: generic type may not be optimal.
 */
trait Extractor[-N] {
  
    /**
     * @param page The source node
     * @param subjectUri The subject URI of the generated triples
     * @param context The page context which holds the state of the extraction.
     * @return A graph holding the extracted data
     */
    def extract(input: N, subjectUri: String, context: PageContext): Seq[Quad]
    
    /**
     * Datasets generated by this extractor. Used for serialization. If a mapping implementation
     * does not return all datasets it produces, serialization may fail.
     */
    val datasets: Set[Dataset]
}