<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.dbpedia.extraction</groupId>
    <artifactId>main</artifactId>
    <packaging>pom</packaging>
    <version>2.0-SNAPSHOT</version>
    <name>Parent POM of the DBpedia framework</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.compiler.version>1.6</java.compiler.version>
        <maven.scala.version>2.9.1</maven.scala.version>
        <scala.compiler.Xmx>-Xmx1024m</scala.compiler.Xmx>
        <skipTests>true</skipTests>
    </properties>

    <modules>
        <module>core</module>
        <module>dump</module>
        <module>server</module>
        <module>scripts</module>
        <module>live</module>
        <!-- module>wiktionary</module -->
    </modules>

    <build>
        <plugins>

            <!-- 
            Note: we could drop this plugin config and just use scala:compile, but then 
            the Scala plugin doesn't understand sub-modules.
            -->
            <plugin>
            
                <groupId>org.scala-tools</groupId>
                <artifactId>maven-scala-plugin</artifactId>
                <version>${maven.scala.version}</version>

                <configuration>
                    <jvmArgs>
                        <jvmArg>${scala.compiler.Xmx}</jvmArg>
                    </jvmArgs>
                </configuration>

                <executions>
                    <execution>
                        <id>compile</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <phase>compile</phase>
                    </execution>

                    <execution>
                        <id>test-compile</id>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                        <phase>test-compile</phase>
                    </execution>

                    <execution>
                        <id>process-resources</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <phase>process-resources</phase>
                    </execution>
                </executions>
                
            </plugin>

            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.compiler.version}</source>
                    <target>${java.compiler.version}</target>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <dependencyManagement>
        <dependencies>

            <dependency>
                <groupId>org.dbpedia.extraction</groupId>
                <artifactId>core</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${maven.scala.version}</version>
            </dependency>

            <!-- dump, scripts, server, wiktionary -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-compress</artifactId>
                <version>1.1</version>
            </dependency>

            <!-- core, live, scripts -->
            <!-- TODO: find a version in a public repo. -->
            <dependency>
                <groupId>org.openrdf</groupId>
                <artifactId>openrdf</artifactId>
                <version>1.0</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <repositories>
        
        <!-- repo order is important - they are checked in the order given here -->
        <!-- put maven central first so that most stuff is downloaded from there -->
        <!-- but don't call it 'central', that may lead to weird effects... -->
        <repository>
            <id>maven</id>
            <url>http://repo1.maven.org/maven2</url>
        </repository>

        <!-- for our special openrdf and json JARs -->
        <repository>
            <id>aksw</id>
            <url>http://prod1.aksw.org:8081/archiva/repository/internal</url>
        </repository>
        
    </repositories>
    
    <!-- 
    add the following to your settings.xml. scala-library and jersey-project add these repos 
    and maven tries to download everything from there. mirrorOf basically deactivates them.
    -->
    <!--
    <mirrors>
        <mirror>
            <id>central</id>
            <url>http://repo1.maven.org/maven2</url>
            <mirrorOf>scala-tools.org</mirrorOf>
        </mirror>
        <mirror>
            <id>central</id>
            <url>http://repo1.maven.org/maven2</url>
            <mirrorOf>glassfish-repository</mirrorOf>
        </mirror>
    </mirrors>
    -->

</project>

